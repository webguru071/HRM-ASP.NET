@model EMSApp.Models.LEAVE_APPLICATION

@{
    ViewBag.Title = "LeaveAppEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>LeaveAppEdit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>LEAVE_APPLICATION</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.LEAVE_APP_ID)
        @if (Session["USER_LEVEL"].ToString() == EMSApp.Helper.ConstantValue.UserLevelAdmin)
        {
            <div class="form-group">
                Employee
                <div class="col-md-10">
                    @Html.DropDownList("EMPLOYEE_ID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EMPLOYEE_ID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                Approved Leave Start
                <div class="col-md-10">
                    @Html.EditorFor(model => model.APPROVED_START_DATE, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.APPROVED_START_DATE, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                Approved Leave End
                <div class="col-md-10">
                    @Html.EditorFor(model => model.APPROVED_END_DATE, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                    @Html.ValidationMessageFor(model => model.APPROVED_END_DATE, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                Application Status
                <div class="col-md-10">
                    @Html.DropDownList("STATUS", new SelectListItem[]
                                               {
                                                    new SelectListItem { Text = "Select One", Value="" },
                                                   new SelectListItem { Text = "Pending", Value=EMSApp.Helper.ConstantValue.LeaveStatusPending },
                                                   new SelectListItem { Text = "Approved", Value=EMSApp.Helper.ConstantValue.LeaveStatusApproved },
                                                   new SelectListItem{ Text="Cancel",Value=EMSApp.Helper.ConstantValue.LeaveStatusCanceled },},
                                                   htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.STATUS, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            Leave Type
            <div class="col-md-10">
                @Html.DropDownList("LEAVE_TYPE_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LEAVE_TYPE_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Applied Leave Start
            <div class="col-md-10">
                @Html.EditorFor(model => model.START_DATE, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.START_DATE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            Applied Leave End
            <div class="col-md-10">
                @Html.EditorFor(model => model.END_DATE, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.END_DATE, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            Remarks
            <div class="col-md-10">
                @Html.EditorFor(model => model.REMARKS, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.REMARKS, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div class="btn btn-info pull-right">
    @Html.ActionLink("Back to List", "LeaveAppIndex")
</div>

